{"version":3,"sources":["assets/pic_default.png","assets/pic_headshot.jpeg","assets/pic_id_card.png","SalmonIdGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["SalmonIdGenerator","useEffect","ReactGA","initialize","pageview","today","Date","date","getDate","month","getMonth","year","getFullYear","days","Array","keys","map","x","months","years","useState","birthDate","setBirthDate","name","setName","sex","setSex","cardImage","setCardImage","headshot","setHeadshot","showResult","setShowResult","canvas","useRef","deafaultCard","Image","src","pic_id_card","onload","head","pic_headshot","ctx","current","getContext","drawImage","font","fillStyle","textAlign","fillText","getSpacedName","spaces","length","split","join","repeat","className","pic_default","ref","width","height","style","onClick","e","display","window","scrollTo","top","event","category","action","restart","autocomplete","onSubmit","preventDefault","trim","includes","alert","submitHandler","for","type","placeholder","value","required","onChange","target","day","accept","new_headshot","URL","createObjectURL","files","class","data-href","data-layout","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,wCCA1B,MAA0B,0CCA1B,MAA0B,wC,OCwO1BA,EAhOW,WAEtBC,qBAAU,WACNC,IAAQC,WAAW,kBACnBD,IAAQE,SAAS,OACnB,IAGF,IAAMC,EAAQ,IAAIC,KACZC,EAAO,CACTA,KAAMF,EAAMG,UACZC,MAAOJ,EAAMK,WAAa,EAC1BC,KAAMN,EAAMO,cAAc,MAIxBC,EAAO,YAAIC,MAAM,IAAIC,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAE,KACxCC,EAAS,YAAIJ,MAAM,IAAIC,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAE,KAC1CE,EAAQ,YAAIL,MAAMP,EAAKI,MAAMI,QAAQC,KAAI,SAAAC,GAAC,OAAIV,EAAKI,KAAKM,KAlBlC,EAqBMG,mBAAS,CACvCT,KAAM,GACNF,MAAO,GACPF,KAAM,KAxBkB,mBAqBrBc,EArBqB,KAqBVC,EArBU,OA0BJF,mBAAS,IA1BL,mBA0BrBG,EA1BqB,KA0BfC,EA1Be,OA2BNJ,mBAAS,IA3BH,mBA2BrBK,EA3BqB,KA2BhBC,EA3BgB,OA4BMN,mBAAS,MA5Bf,mBA4BrBO,EA5BqB,KA4BVC,EA5BU,OA6BIR,mBAAS,MA7Bb,mBA6BrBS,EA7BqB,KA6BXC,EA7BW,OA8BQV,oBAAS,GA9BjB,mBA8BrBW,EA9BqB,KA8BTC,EA9BS,KAiCtBC,EAASC,mBACTC,EAAeD,mBACHA,mBAGlBjC,qBAAU,WACN,IAAM0B,EAAY,IAAIS,MACtBT,EAAUU,IAAMC,EAChBX,EAAUY,OAAS,kBAAMX,EAAaD,IAEtC,IAAMa,EAAO,IAAIJ,MACjBI,EAAKH,IAAMI,EACXD,EAAKD,OAAS,kBAAMT,EAAYU,MACjC,IAGHvC,qBAAU,WACN,GAAK0B,GAAaE,GAAaI,EAAO,CAElC,IAAMS,EAAMT,EAAOU,QAAQC,WAAW,MACtCF,EAAIG,UAAUlB,EAAW,EAAG,GAC5Be,EAAIG,UAAUhB,EAAU,IAAK,GAAI,IAAK,OAGtCa,EAAII,KAAO,4CACXJ,EAAIK,UAAY,UAChBL,EAAIM,UAAY,OAChBN,EAAIO,SAASC,EAAc3B,GAAO,IAAK,IAAK,KAG5CmB,EAAII,KAAO,4CACXJ,EAAIM,UAAY,SAChBN,EAAIO,SAAS5B,EAAUV,KAAM,IAAK,KAClC+B,EAAIO,SAAS5B,EAAUZ,MAAO,MAAO,KACrCiC,EAAIO,SAAS5B,EAAUd,KAAM,IAAK,KAGlCmC,EAAII,KAAO,4CACXJ,EAAIO,SAASxB,EAAK,IAAK,KAGvBiB,EAAII,KAAO,4CACXJ,EAAIO,SAAS1C,EAAKI,KAAM,IAAK,KAC7B+B,EAAIO,SAAS1C,EAAKE,MAAO,IAAK,KAC9BiC,EAAIO,SAAS1C,EAAKA,KAAM,IAAK,KAG7BmC,EAAII,KAAO,4CACXJ,EAAIK,UAAY,UAChBL,EAAIM,UAAY,OAChBN,EAAIO,SAAS,aAAc,IAAK,QAErC,CAACtB,EAAWE,EAAUI,EAAQZ,EAAWE,EAAME,IAElD,IA4BMyB,EAAgB,SAAC3B,GACnB,IACM4B,GADU,GACU5B,EAAK6B,QAAQ7B,EAAK6B,OAC5C,OAAO7B,EAAOA,EAAK8B,MAAM,IAAIC,KAAK,IAAIC,OAAOJ,IAAW,IAwB5D,OACI,sBAAKK,UAAU,gBAAf,UACI,mBAAGA,UAAU,QAAb,wFACA,mBAAGA,UAAU,WAAb,2HACA,qBAAKnB,IAAKoB,EAAaC,IAAKvB,EAAcqB,UAAU,mBACpD,wBAAQG,MAAM,MAAMC,OAAO,MAAMF,IAAKzB,EAAQuB,UAAU,SAASK,MAAO,KAEpE9B,EACI,sBAAKyB,UAAU,SAAf,UACI,mBAAGA,UAAU,MAAb,+GACA,mBAAGA,UAAU,WAAb,kIACA,wBAASA,UAAU,gBAAgBM,QAAS,SAACC,GAAD,OA/BhD,SAACA,GACb/B,GAAc,GACdC,EAAOU,QAAQkB,MAAMG,QAAU,OAC/B7B,EAAaQ,QAAQkB,MAAMG,QAAU,QAErCxC,EAAQ,IAER,IAAMK,EAAW,IAAIO,MACrBP,EAASQ,IAAMI,EACfZ,EAASU,OAAS,kBAAMT,EAAYD,IACpCC,IAEAmC,OAAOC,SAAS,CAACC,IAAK,IAEtBjE,IAAQkE,MAAM,CACVC,SAAU,UACVC,OAAQ,8BAeuDC,IAAnD,sDAGJ,uBAAMf,UAAU,gBAAgBgB,aAAa,MAAMC,SAAW,SAAAV,GAAC,OArEzD,SAACA,GAKnB,GAJAA,EAAEW,iBAGFlD,EAAQD,EAAKoD,SACNpD,EAAKqD,SAAS,YAAQrD,EAAKqD,SAAS,UAOvC,OANAC,MAAM,iHAEN3E,IAAQkE,MAAM,CACVC,SAAU,eACVC,OAAQ,8BAKhBtC,GAAc,GACdC,EAAOU,QAAQkB,MAAMG,QAAU,QAC/B7B,EAAaQ,QAAQkB,MAAMG,QAAU,OAErCC,OAAOC,SAAS,CAACC,IAAK,IAEtBjE,IAAQkE,MAAM,CACVC,SAAU,SACVC,OAAQ,mCA8CmEQ,CAAcf,IAAjF,UACI,sBAAKP,UAAU,eAAf,UACI,uBAAOuB,IAAI,SAASvB,UAAU,YAA9B,0BACA,uBAAOwB,KAAK,OAAOC,YAAY,4EAAgBC,MAAO3D,EAAM4D,UAAQ,EAAC3B,UAAU,YAAY4B,SAAW,SAAArB,GAAC,OAAIvC,EAAQuC,EAAEsB,OAAOH,aAGhI,sBAAK1B,UAAU,oBAAf,UACI,uBAAOuB,IAAI,SAASvB,UAAU,YAA9B,8CACA,yBAAQjC,KAAK,YAAYwD,IAAI,SAASI,UAAQ,EAAC3B,UAAU,YAAY4B,SAAW,SAAArB,GAAC,OAAIzC,EAAa,2BAC3FD,GAD0F,IAE7FV,KAAMoD,EAAEsB,OAAOH,UAFnB,UAII,2BACC/D,EAAMH,KAAK,SAAAL,GAAI,OAAI,iCAASA,UAEjC,yBAAQY,KAAK,aAAawD,IAAI,SAASI,UAAQ,EAAC3B,UAAU,YAAY4B,SAAW,SAAArB,GAAC,OAAIzC,EAAa,2BAC5FD,GAD2F,IAE9FZ,MAAOsD,EAAEsB,OAAOH,UAFpB,UAII,2BACEhE,EAAOF,KAAK,SAAAP,GAAK,OAAI,iCAASA,UAEpC,yBAAQc,KAAK,YAAYwD,IAAI,SAASI,UAAQ,EAAC3B,UAAU,YAAY4B,SAAW,SAAArB,GAAC,OAAIzC,EAAa,2BAC3FD,GAD0F,IAE7Fd,KAAMwD,EAAEsB,OAAOH,UAFnB,UAII,2BACMrE,EAAKG,KAAK,SAAAsE,GAAG,OAAI,iCAASA,aAIxC,sBAAK9B,UAAU,cAAf,UACI,uBAAOuB,IAAI,SAASvB,UAAU,YAA9B,0BACA,yBAAQjC,KAAK,MAAMwD,IAAI,SAASI,UAAQ,EAAC3B,UAAU,YAAY4B,SAAW,SAAArB,GAAC,OAAIrC,EAAOqC,EAAEsB,OAAOH,QAA/F,UACI,2BACA,4CACA,4CACA,wDAIR,uBAAOH,IAAI,SAASvB,UAAU,oBAA9B,oEACA,uBAAOwB,KAAK,OAAOO,OAAO,UAAUH,SAAW,SAAArB,GAC3C,IAAMyB,EAAe,IAAIpD,MACzBoD,EAAanD,IAAMoD,IAAIC,gBAAgB3B,EAAEsB,OAAOM,MAAM,IACtDH,EAAajD,OAAS,kBAAMT,EAAY0D,IACxCtF,IAAQkE,MAAM,CACVC,SAAU,SACVC,OAAQ,gCAIhB,wBAAQU,KAAK,SAASxB,UAAU,eAAhC,0CAGZ,sBAAKA,UAAU,iBAAf,UACI,mBAAGA,UAAU,eAAb,mGACA,qBAAKoC,MAAM,kBACPpC,UAAU,kBACVqC,YAAU,iCACVC,cAAY,oBAGpB,mBAAGtC,UAAU,UAAUuC,KAAK,IAA5B,mECxNGC,MARf,WACI,OACI,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCMKyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79620da4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pic_default.39bfd990.png\";","export default __webpack_public_path__ + \"static/media/pic_headshot.b7c13b14.jpeg\";","export default __webpack_public_path__ + \"static/media/pic_id_card.f2e8e017.png\";","import React, { useEffect, useState, useRef } from 'react'\nimport \"./SalmonIdGenerator.css\";\nimport ReactGA from 'react-ga';\nimport pic_default from './assets/pic_default.png';\nimport pic_headshot from './assets/pic_headshot.jpeg';\nimport pic_id_card from './assets/pic_id_card.png';\n\n\nconst SalmonIdGenerator = () => {\n    //initialize Google Analytics\n    useEffect(() => {\n        ReactGA.initialize(\"UA-164144151-1\")\n        ReactGA.pageview('/')\n    },[])\n\n    //date of today\n    const today = new Date();\n    const date = {\n        date: today.getDate(),\n        month: today.getMonth() + 1,\n        year: today.getFullYear()-1911,\n    }\n\n    //const arrays for birthdate options\n    const days = [...Array(31).keys()].map(x => x+1)\n    const months = [...Array(12).keys()].map(x => x+1)\n    const years = [...Array(date.year).keys()].map(x => date.year-x)\n\n    //states\n    const [birthDate, setBirthDate] = useState({\n        year: \"\",\n        month: \"\",\n        date: \"\",\n    });\n    const [name, setName] = useState(\"\");\n    const [sex, setSex] = useState(\"\");\n    const [cardImage, setCardImage] = useState(null);\n    const [headshot, setHeadshot] = useState(null);\n    const [showResult, setShowResult] = useState(false);\n\n    //refs\n    const canvas = useRef();\n    const deafaultCard = useRef();\n    const nameInput = useRef();\n\n    //make sure image loads at first render\n    useEffect(() => {\n        const cardImage = new Image();\n        cardImage.src = pic_id_card;\n        cardImage.onload = () => setCardImage(cardImage);\n\n        const head = new Image();\n        head.src = pic_headshot;\n        head.onload = () => setHeadshot(head);\n    }, [])\n\n    //\n    useEffect(() => {\n        if( (cardImage && headshot) && canvas){\n            //initialize canvas\n            const ctx = canvas.current.getContext(\"2d\")\n            ctx.drawImage(cardImage, 0, 0)\n            ctx.drawImage(headshot, 400, 30, 160, 160*1.285)\n\n            //name\n            ctx.font = \"600 35px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillStyle = \"#3f434a\"\n            ctx.textAlign = \"left\"\n            ctx.fillText(getSpacedName(name), 100, 195, 230)\n\n            //birth date\n            ctx.font = \"600 22px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.textAlign = \"center\"\n            ctx.fillText(birthDate.year, 165, 260)\n            ctx.fillText(birthDate.month, 227.5, 260)\n            ctx.fillText(birthDate.date, 290, 260)\n\n            //sex\n            ctx.font = \"600 20px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillText(sex, 495, 265)\n\n            //date of issue (default to date of today)\n            ctx.font = \"600 17px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillText(date.year, 145, 314)\n            ctx.fillText(date.month, 180, 314)\n            ctx.fillText(date.date, 210, 314)\n\n            //uniform id (default to \"A123456789\")\n            ctx.font = \"300 28px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillStyle = \"#ba2822\"\n            ctx.textAlign = \"left\"\n            ctx.fillText(\"A312345678\", 403, 325)\n        }\n    }, [cardImage, headshot, canvas, birthDate, name, sex])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        //validate name input\n        setName(name.trim());   //remove the extra space in the name\n        if ( !(name.includes(\"鮭\") && name.includes(\"魚\"))) {\n            alert(\"名字沒鮭魚還想吃鮭魚？回去重寫 😠!\");\n            //collects GA event usage\n            ReactGA.event({\n                category: \"Form rejeced\",\n                action: \"Form rejected due to name\"\n            })\n            return;\n        }\n\n        setShowResult(true);\n        canvas.current.style.display = \"block\";     //hide result\n        deafaultCard.current.style.display = \"none\"     //hide default card imagez\n\n        window.scrollTo({top: 0});\n        //collects GA event usage\n        ReactGA.event({\n            category: \"Submit\",\n            action: \"A new salmon meme id generated\"\n        })\n    }\n\n    //adds space between characters in name to look more valid XD\n    const getSpacedName = (name) => {\n        const maxChar = 25;\n        const spaces = (maxChar - name.length)/name.length;\n        return name ? name.split('').join(\" \".repeat(spaces)) : \"\";\n    }\n\n    //restart the app by hiding result, and show the forms & default image again.\n    const restart = (e) => {\n        setShowResult(false);\n        canvas.current.style.display = \"none\";  //hide result\n        deafaultCard.current.style.display = \"block\";   //show deafult card image\n\n        setName(\"\");\n        //reset headshot to default image(sushi)\n        const headshot = new Image();\n        headshot.src = pic_headshot;\n        headshot.onload = () => setHeadshot(headshot);\n        setHeadshot();\n\n        window.scrollTo({top: 0});\n        //collects GA event usage\n        ReactGA.event({\n            category: \"Restart\",\n            action: \"A user restarted the game\"\n        })\n    }\n\n    return (\n        <div className=\"GeneratorPage\">\n            <p className=\"title\">🍣 鮭魚身分證產生器 🍣</p>\n            <p className=\"subtitle\">沒有改名的勇氣，也要有裝逼的勇氣 😎</p>\n            <img src={pic_default} ref={deafaultCard} className=\"idCard_default\"/>\n            <canvas width=\"588\" height=\"364\" ref={canvas} className=\"idCard\" style={{}}/>\n            {\n                showResult?\n                    <div className=\"result\">\n                        <p className=\"end\">可以去吃免費壽司囉～ 😎😎😎</p>\n                        <p className=\"saveNote\">*電腦按下右鍵可以保存，手機直接螢幕截圖*</p>\n                        <button  className=\"restartButton\" onClick={(e) => restart() }>再玩一次 🍣</button>\n                    </div>\n                    :\n                    <form className=\"formContainer\" autocomplete=\"off\" onSubmit={ e => submitHandler(e)}>\n                        <div className=\"name formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">姓名</label>\n                            <input type=\"text\" placeholder=\"必須含有“鮭魚”二字 🍣\" value={name} required className=\"formInput\" onChange={ e => setName(e.target.value)}/>\n                        </div>\n\n                        <div className=\"birthDate formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">出生年/月/日</label>\n                            <select name=\"birthYear\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                year: e.target.value\n                            })}>\n                                <option></option>\n                                {years.map( year => <option>{year}</option>) }\n                            </select>\n                            <select name=\"birthMonth\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                month: e.target.value\n                            })}>\n                                <option></option>\n                                { months.map( month => <option>{month}</option>) }\n                            </select>\n                            <select name=\"birthDate\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                date: e.target.value\n                            })}>\n                                <option></option>\n                                    { days.map( day => <option>{day}</option>) }\n                            </select>\n                        </div>\n\n                        <div className=\"sex formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">性別</label>\n                            <select name=\"sex\" for=\"idForm\" required className=\"formInput\" onChange={ e => setSex(e.target.value)}>\n                                <option></option>\n                                <option>男</option>\n                                <option>女</option>\n                                <option>鮭魚</option>\n                            </select>\n                        </div>\n\n                        <label for=\"idForm\" className=\"formLabel formRow\">上傳大頭照（選填）</label>\n                        <input type=\"file\" accept=\"image/*\" onChange={ e => {\n                            const new_headshot = new Image();\n                            new_headshot.src = URL.createObjectURL(e.target.files[0]);\n                            new_headshot.onload = () => setHeadshot(new_headshot);\n                            ReactGA.event({\n                                category: \"Upload\",\n                                action: \"A user uploaded an image\"\n                            })\n                        }}/>\n\n                        <button type=\"submit\" className=\"submitButton\">完成 😎</button>\n                    </form>\n            }\n            <div className=\"shareContainer\">\n                <p className=\"shareMessage\">覺得有趣的話分享出去吧🤪 ～</p>\n                <div class=\"fb-share-button\"\n                    className=\"fb-share-button\"\n                    data-href=\"https://miffychen.tech/salmon/\"\n                    data-layout=\"button_count\">\n                </div>\n            </div>\n            <a className=\"hashtag\" href=\"#\">#鮭魚身分證產生器</a>\n        </div>\n    )\n}\n\nexport default SalmonIdGenerator","import React from 'react';\nimport SalmonIdGenerator from './SalmonIdGenerator';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n          <SalmonIdGenerator/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}