{"version":3,"sources":["SalmonIdGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["SalmonIdGenerator","useEffect","ReactGA","initialize","pageview","today","Date","date","getDate","month","getMonth","year","getFullYear","days","Array","keys","map","x","months","years","useState","birthDate","setBirthDate","name","setName","sex","setSex","image","setImage","face","setFace","showResult","setShowResult","canvas","useRef","deafaultImage","fake_roc_id","Image","setAttribute","src","onload","ctx","current","getContext","drawImage","font","fillStyle","textAlign","fillText","getSpacedName","spaces","length","split","join","repeat","className","ref","width","height","style","href","toDataURL","download","onClick","e","display","window","scrollTo","top","event","category","action","onSubmit","preventDefault","document","forms","value","includes","alert","submitHandler","for","type","placeholder","required","onChange","target","day","accept","new_face","URL","createObjectURL","files","class","data-href","data-layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c9fb872.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport \"./SalmonIdGenerator.css\";\nimport ReactGA from 'react-ga';\n\nconst SalmonIdGenerator = () => {\n    useEffect(() => {\n        ReactGA.initialize(\"UA-164144151-1\")\n        ReactGA.pageview('/')\n    },[])\n\n    const today = new Date();\n    const date = {\n        date: today.getDate(),\n        month: today.getMonth() + 1,\n        year: today.getFullYear()-1911,\n    }\n\n    const days = [...Array(31).keys()].map(x => x+1)\n    const months = [...Array(12).keys()].map(x => x+1)\n    const years = [...Array(date.year).keys()].map(x => date.year-x)\n\n    const [birthDate, setBirthDate] = useState({\n        year: \"\",\n        month: \"\",\n        date: \"\",\n    });\n    const [name, setName] = useState(\"\");    \n    const [sex, setSex] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [face, setFace] = useState(null);\n    const [showResult, setShowResult] = useState(false);\n    const canvas = useRef(null);\n    const deafaultImage = useRef(null);\n\n    useEffect(() => {\n        const fake_roc_id = new Image();\n        fake_roc_id .setAttribute('crossorigin', 'anonymous');\n        fake_roc_id.src = \"https://i.imgur.com/QBlys1A.png\";\n        fake_roc_id.onload = () => setImage(fake_roc_id);\n\n        const face = new Image();\n        face.setAttribute('crossorigin', 'anonymous');\n        face.src = \"https://izzycooking.com/wp-content/uploads/2020/10/Salmon-Nigiri-thumbnail-500x500.jpg\";\n        face.onload = () => setFace(face);\n    }, [])\n\n    useEffect(() => {\n        if( (image && face) && canvas){\n            const ctx = canvas.current.getContext(\"2d\")\n            ctx.drawImage(image, 0, 0)\n            ctx.drawImage(face, 400, 30, 160, 160*1.285)\n            // canvas.style.letterSpacing = 200/name.length + 'px';\n\n            // ctx.fillRect(100,168,230,32)\n            ctx.font = \"600 35px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillStyle = \"#3f434a\"\n            ctx.textAlign = \"left\"\n            ctx.fillText(getSpacedName(name), 100, 195, 230)\n\n            ctx.font = \"600 22px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.textAlign = \"center\"\n            ctx.fillText(birthDate.year, 165, 260)\n            ctx.fillText(birthDate.month, 227.5, 260)\n            ctx.fillText(birthDate.date, 290, 260)\n            \n            ctx.font = \"600 20px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillText(sex, 495, 265)\n\n            ctx.font = \"600 17px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillText(date.year, 145, 314)\n            ctx.fillText(date.month, 180, 314)\n            ctx.fillText(date.date, 210, 314)\n\n            ctx.font = \"300 28px PMingLiU, 'Noto Serif TC', serif\"\n            ctx.fillStyle = \"#ba2822\"\n            ctx.textAlign = \"left\"\n            ctx.fillText(\"A123456789\", 403, 325)\n        }        \n    }, [image, face, canvas, birthDate, name, sex])\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n        const name = document.forms[\"idForm\"][\"name\"].value;\n        if (!name.includes(\"鮭魚\")) {\n            alert(\"名字沒鮭魚還想吃鮭魚？回去重寫 😠!\");\n            ReactGA.event({\n                category: \"Form rejeced\",\n                action: \"Form rejected due to name\"\n            })\n            return;\n        }\n\n        setShowResult(true);\n        canvas.current.style.display = \"block\";\n        deafaultImage.current.style.display = \"none\"\n        window.scrollTo({top: 0});\n        ReactGA.event({\n            category: \"Submit\",\n            action: \"A new salmon meme id generated\"\n        })\n    }\n\n    const getSpacedName = (name) => {\n        const maxChar = 25;\n        const spaces = (maxChar - name.length)/name.length;\n        return name ? name.split('').join(\" \".repeat(spaces)) : \"\";\n    }\n\n    const restart = (e) => {\n        setShowResult(false);\n        canvas.current.style.display = \"none\";\n        deafaultImage.current.style.display = \"block\";\n        window.scrollTo({top: 0});\n        ReactGA.event({\n            category: \"Restart\",\n            action: \"A user restarted the game\"\n        })\n    }\n    const getImgURL = () => {\n        return canvas.current.toDataURL(\"image/png\");\n    }\n\n    return (\n        <div className=\"GeneratorPage\">\n            <p className=\"title\">🍣 鮭魚身分證產生器 🍣</p>           \n            <p className=\"subtitle\">沒有改名的勇氣，也要有裝逼的勇氣😎</p>   \n            <img src=\"https://i.imgur.com/C2nUhcr.png\" ref={deafaultImage} className=\"idCard_default\"/>\n            <canvas width=\"588\" height=\"364\" ref={canvas} className=\"idCard\" style={{}}/>\n            {\n                showResult? \n                    <div className=\"result\"> \n                        <p className=\"end\">Wow那你很會取名字喔😎😎😎</p>\n                        <p className=\"saveNote\">*電腦按下右鍵可以保存，手機直接螢幕截圖*</p>\n                        <div className=\"buttonContainer\">\n                            <a  className=\"downloadButton\" href={getImgURL()} download='very-legit-id' >保存 💾</a>  \n                            <button  className=\"restartButton\" onClick={(e) => restart() }>再玩一次 🍣</button>  \n                        </div>\n                    </div>                   \n                    :\n                    <form name=\"idForm\" className=\"formContainer\" onSubmit={ e => submitHandler(e)}>\n                        <div className=\"name formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">姓名</label>\n                            <input type=\"text\" name=\"name\" placeholder=\"必須含有“鮭魚”二字 🍣\" value={name} required className=\"formInput\" onChange={ e => setName(e.target.value)}/>\n                        </div>                \n\n                        <div className=\"birthDate formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">出生年/月/日</label>\n                            <select name=\"birthYear\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                year: e.target.value\n                            })}>\n                                <option></option>\n                                {years.map( year => <option>{year}</option>) }       \n                            </select>                 \n                            <select name=\"birthMonth\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                month: e.target.value\n                            })}>                   \n                                <option></option>\n                                { months.map( month => <option>{month}</option>) }                \n                            </select> \n                            <select name=\"birthDate\" for=\"idForm\" required className=\"formInput\" onChange={ e => setBirthDate({\n                                ...birthDate,\n                                date: e.target.value\n                            })}>\n                                <option></option>\n                                    { days.map( day => <option>{day}</option>) }\n                            </select> \n                        </div>                \n\n                        <div className=\"sex formRow\">\n                            <label for=\"idForm\" className=\"formLabel\">性別</label>\n                            <select name=\"sex\" for=\"idForm\" required className=\"formInput\" onChange={ e => setSex(e.target.value)}> \n                                <option></option>\n                                <option>男</option>\n                                <option>女</option>\n                                <option>鮭魚</option>\n                            </select> \n                        </div>                 \n                        \n                        <label for=\"idForm\" className=\"formLabel formRow\">上傳大頭照（選填）</label>\n                        <input type=\"file\" accept=\"image/*\" onChange={ e => {\n                            const new_face = new Image();\n                            new_face.setAttribute('crossorigin', 'anonymous');\n                            new_face.src = URL.createObjectURL(e.target.files[0]);\n                            new_face.onload = () => setFace(new_face);\n                            ReactGA.event({\n                                category: \"Upload\",\n                                action: \"A user uploaded an image\"\n                            })                        \n                        }}/>\n\n                        <button type=\"submit\" className=\"submitButton\">完成 😎</button>\n                    </form>   \n            }       \n            <div className=\"shareContainer\">\n                <p className=\"shareMessage\">覺得有趣的話分享出去吧🤪 ～</p>\n                <div class=\"fb-share-button\" \n                    className=\"fb-share-button\"\n                    data-href=\"https://salmon-id-generator.netlify.app/\" \n                    data-layout=\"button_count\">\n                </div>  \n            </div>       \n            <a className=\"hashtag\" target=\"_blank\" href=\"https://www.instagram.com/explore/tags/鮭魚身分證產生器/\">#鮭魚身分證產生器</a>      \n        </div>        \n    )\n}\n\nexport default SalmonIdGenerator\n","import React from 'react';\nimport SalmonIdGenerator from './SalmonIdGenerator';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n          <SalmonIdGenerator/>      \n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}